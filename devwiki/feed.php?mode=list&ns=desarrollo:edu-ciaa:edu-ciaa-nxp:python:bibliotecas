<?xml version="1.0" encoding="UTF-8"?>
<!-- generator="FeedCreator 1.8" -->
<?xml-stylesheet href="http://www.proyecto-ciaa.com.ar/devwiki/lib/exe/css.php?s=feed" type="text/css"?>
<rdf:RDF
    xmlns="http://purl.org/rss/1.0/"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
    xmlns:dc="http://purl.org/dc/elements/1.1/">
    <channel rdf:about="http://www.proyecto-ciaa.com.ar/devwiki/feed.php">
        <title> desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas</title>
        <description></description>
        <link>http://www.proyecto-ciaa.com.ar/devwiki/</link>
        <image rdf:resource="http://www.proyecto-ciaa.com.ar/devwiki/lib/tpl/dokuwiki/images/favicon.ico" />
       <dc:date>2023-11-15T08:27:28+00:00</dc:date>
        <items>
            <rdf:Seq>
                <rdf:li rdf:resource="http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-modbus&amp;rev=1476017361&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-adc&amp;rev=1475949790&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-dac&amp;rev=1475950668&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-eeprom&amp;rev=1475953949&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-extint&amp;rev=1475954317&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-i2c&amp;rev=1476016542&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-keyboard&amp;rev=1476016036&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-lcd&amp;rev=1476016153&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-led&amp;rev=1475935422&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-pin&amp;rev=1475939757&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-pwm&amp;rev=1476015908&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-rtc&amp;rev=1476016446&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-spi&amp;rev=1476016307&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-switch&amp;rev=1475935860&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-timer&amp;rev=1475953525&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-uart&amp;rev=1482093853&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb&amp;rev=1476016572&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-utime&amp;rev=1476016927&amp;do=diff"/>
            </rdf:Seq>
        </items>
    </channel>
    <image rdf:about="http://www.proyecto-ciaa.com.ar/devwiki/lib/tpl/dokuwiki/images/favicon.ico">
        <title></title>
        <link>http://www.proyecto-ciaa.com.ar/devwiki/</link>
        <url>http://www.proyecto-ciaa.com.ar/devwiki/lib/tpl/dokuwiki/images/favicon.ico</url>
    </image>
    <item rdf:about="http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-modbus&amp;rev=1476017361&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2016-10-09T12:49:21+00:00</dc:date>
        <dc:creator>Anonymous (anonymous@undisclosed.example.com)</dc:creator>
        <title>desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-modbus</title>
        <link>http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-modbus&amp;rev=1476017361&amp;do=diff</link>
        <description>Módulo ModBus

Modo Master

Ejemplo: Lectura de registro en la dirección 0x0001 desde un slave con la dirección 0x55 usando la uart 3
import pyb
import ModBus

uart = pyb.UART(3)
uart.init(115200)

instrument = ModBus.Instrument(uart,0x55,mode=ModBus.MODE_ASCII)
print(instrument)

while True:
    try:
        v = instrument.read_register(1)
        print(&quot;Register 1 value :&quot;+str(v))
    except Exception as e:
        print(e)
    pyb.delay(1000)</description>
    </item>
    <item rdf:about="http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-adc&amp;rev=1475949790&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2016-10-08T18:03:10+00:00</dc:date>
        <dc:creator>Anonymous (anonymous@undisclosed.example.com)</dc:creator>
        <title>desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-adc</title>
        <link>http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-adc&amp;rev=1475949790&amp;do=diff</link>
        <description>Soporte ADC: Clase ADC

La clase ADC permitirá crear objetos que representan las entradas analógicas de la placa

Constructor

La clase posee un constructor que recibe un solo argumento, este argumento es el número de entrada que controlará.

Los números disponibles son : 1,2 o 3</description>
    </item>
    <item rdf:about="http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-dac&amp;rev=1475950668&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2016-10-08T18:17:48+00:00</dc:date>
        <dc:creator>Anonymous (anonymous@undisclosed.example.com)</dc:creator>
        <title>desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-dac</title>
        <link>http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-dac&amp;rev=1475950668&amp;do=diff</link>
        <description>Soporte DAC: Clase DAC

La clase DAC permitirá crear objetos que representan la salida analógica de la placa.

Constructor

La clase posee un constructor que recibe un solo argumento, este argumento es el número de salida analógica que controlará. Solo existe una salida, por lo que el valor que debe pasarse siempre es 1.</description>
    </item>
    <item rdf:about="http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-eeprom&amp;rev=1475953949&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2016-10-08T19:12:29+00:00</dc:date>
        <dc:creator>Anonymous (anonymous@undisclosed.example.com)</dc:creator>
        <title>desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-eeprom</title>
        <link>http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-eeprom&amp;rev=1475953949&amp;do=diff</link>
        <description>Soporte EEPROM interna: Clase EEPROM

La clase EEPROM permitirá crear un objeto que representa la memoria EEPROM interna del microcontrolador.

Constructor

El constructor de la clase no recibe parámetros.

Métodos

La clase EEPROM posee métodos para leer y escribir bytes (8bit) enteros (32bits), números con punto flotante (32bits) y Strings.</description>
    </item>
    <item rdf:about="http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-extint&amp;rev=1475954317&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2016-10-08T19:18:37+00:00</dc:date>
        <dc:creator>Anonymous (anonymous@undisclosed.example.com)</dc:creator>
        <title>desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-extint</title>
        <link>http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-extint&amp;rev=1475954317&amp;do=diff</link>
        <description>Soporte interrupciones en GPIOs: Clase ExtInt
import pyb

def callBack(line):
        print(&quot;Pin Interrupt!&quot;)
        print(&quot;Line = &quot;,line)

p = pyb.Pin(8)
p.init(pyb.Pin.OUT_PP,pyb.Pin.PULL_NONE)
print(p)

int = pyb.ExtInt(p,pyb.ExtInt.IRQ_RISING,pyb.Pin.PULL_NONE,callBack)
print(int)

while True:
        pyb.delay(1000)
        print(&quot;tick&quot;)</description>
    </item>
    <item rdf:about="http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-i2c&amp;rev=1476016542&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2016-10-09T12:35:42+00:00</dc:date>
        <dc:creator>Anonymous (anonymous@undisclosed.example.com)</dc:creator>
        <title>desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-i2c</title>
        <link>http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-i2c&amp;rev=1476016542&amp;do=diff</link>
        <description>Soporte I2C Master: Clase I2C

Ejemplo lectura y escritura de una memoria tipo 24C04:
import pyb
print(&quot;Test I2C with AT24C04&quot;)

i2c = pyb.I2C(100000) #100Khz
i2c.slave_addr(0x50)

def writeByte(addr,value):
    data = bytearray()
    data.append(addr)
    data.append(value)
    i2c.write(data)


def readBytes(addr,size):
    data = bytearray()
    data.append(addr)    
    i2c.write(data)    
    return i2c.read(size)

writeByte(0x00,11)
pyb.delay(10)
writeByte(0x01,22)
pyb.delay(10)
writeByte(…</description>
    </item>
    <item rdf:about="http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-keyboard&amp;rev=1476016036&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2016-10-09T12:27:16+00:00</dc:date>
        <dc:creator>Anonymous (anonymous@undisclosed.example.com)</dc:creator>
        <title>desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-keyboard</title>
        <link>http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-keyboard&amp;rev=1476016036&amp;do=diff</link>
        <description>Soporte Teclado matricial: Clase Keyboard
import pyb

keyboard = pyb.Keyboard(4,4) #4 rows, 4 columns
print(keyboard)

while True:
  key = keyboard.get_char()
  print(&quot;key:&quot;+str(key))
El constructor recibe la cantidad de filas y columnas que se sensan. El método</description>
    </item>
    <item rdf:about="http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-lcd&amp;rev=1476016153&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2016-10-09T12:29:13+00:00</dc:date>
        <dc:creator>Anonymous (anonymous@undisclosed.example.com)</dc:creator>
        <title>desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-lcd</title>
        <link>http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-lcd&amp;rev=1476016153&amp;do=diff</link>
        <description>Soporte LCD tipo HD44780U: Clase LCD
import pyb

lcd = pyb.LCD(2,0) # 2 lines, dot format:5x8
lcd.clear()

lcd.write(&quot;Test LCD\nEDUCIAA&quot;)
pyb.delay(1000)

lcd.clear()
lcd.config_cursor(True,True) #Cursor ON, Blink ON

c=0
while(True):
    c=c+1   
    lcd.goto_xy(0,0)
    lcd.write(&quot;counter:&quot;+str(c))        
    lcd.goto_xy(10,1)
    lcd.write(str(c))
    pyb.delay(1000)</description>
    </item>
    <item rdf:about="http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-led&amp;rev=1475935422&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2016-10-08T14:03:42+00:00</dc:date>
        <dc:creator>Anonymous (anonymous@undisclosed.example.com)</dc:creator>
        <title>desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-led</title>
        <link>http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-led&amp;rev=1475935422&amp;do=diff</link>
        <description>Soporte Leds: Clase LED

La clase LED permite la creación de objetos que representan los LEDs que posee la placa.

Constructor

La clase posee un constructor que recibe un solo argumento, este argumento es el número de LED que controlará.

Números de leds disponibles: de 1 a 6:</description>
    </item>
    <item rdf:about="http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-pin&amp;rev=1475939757&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2016-10-08T15:15:57+00:00</dc:date>
        <dc:creator>Anonymous (anonymous@undisclosed.example.com)</dc:creator>
        <title>desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-pin</title>
        <link>http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-pin&amp;rev=1475939757&amp;do=diff</link>
        <description>Soporte GPIOs: Clase Pin

La clase Pin permitirá crear objetos que representan las GPIOs de la placa.

Constructor

La clase posee un constructor que recibe un solo argumento, este argumento es el número de GPIO que controlará.

Números de GPIOs: 0 a 8 (como se indican en la placa)</description>
    </item>
    <item rdf:about="http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-pwm&amp;rev=1476015908&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2016-10-09T12:25:08+00:00</dc:date>
        <dc:creator>Anonymous (anonymous@undisclosed.example.com)</dc:creator>
        <title>desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-pwm</title>
        <link>http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-pwm&amp;rev=1476015908&amp;do=diff</link>
        <description>Soporte PWM: Clase PWM
import pyb

pyb.PWM.set_frequency(1000)

out0 = pyb.PWM(0)
out0.duty_cycle(50) # 50%
print(&quot;Duty cycle :&quot;+str(out0.duty_cycle()))

out1= pyb.PWM(1)
out1.duty_cycle(25)

out10= pyb.PWM(10)
out10.duty_cycle(75)

while True:
        pyb.delay(1000)</description>
    </item>
    <item rdf:about="http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-rtc&amp;rev=1476016446&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2016-10-09T12:34:06+00:00</dc:date>
        <dc:creator>Anonymous (anonymous@undisclosed.example.com)</dc:creator>
        <title>desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-rtc</title>
        <link>http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-rtc&amp;rev=1476016446&amp;do=diff</link>
        <description>Soporte RTC: Clase RTC
import pyb
rtc = pyb.RTC()

# (year, month, day, weekday, hours, minutes, seconds)
#newDt = [2015,12,31,0,18,16,0]
#rtc.datetime(newDt)

while True:
    now = rtc.datetime()
    print(now)   
    pyb.delay(1000)
El método “datetime</description>
    </item>
    <item rdf:about="http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-spi&amp;rev=1476016307&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2016-10-09T12:31:47+00:00</dc:date>
        <dc:creator>Anonymous (anonymous@undisclosed.example.com)</dc:creator>
        <title>desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-spi</title>
        <link>http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-spi&amp;rev=1476016307&amp;do=diff</link>
        <description>Soporte SPI modo Master: Clase SPI
import pyb

spi = pyb.SPI(8,0,10000)

dataTx = bytearray()
dataTx.append(0x55)
dataTx.append(0x55)
dataTx.append(0x55)
dataTx.append(0x55)

while True:
    print(&quot;send:&quot;)
    print(dataTx)
    spi.write(dataTx)
    pyb.delay(1000)


    dataRx = spi.read(5)
    print(&quot;received:&quot;)
    print(dataRx)
    pyb.delay(1000)</description>
    </item>
    <item rdf:about="http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-switch&amp;rev=1475935860&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2016-10-08T14:11:00+00:00</dc:date>
        <dc:creator>Anonymous (anonymous@undisclosed.example.com)</dc:creator>
        <title>desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-switch</title>
        <link>http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-switch&amp;rev=1475935860&amp;do=diff</link>
        <description>Soporte Pulsadores: Clase Switch

La clase Switch permitirá crear objetos que representan los pulsadores de la placa.

Constructor

La clase posee un constructor que recibe un solo argumento, este argumento es el número de pulsador que controlará.</description>
    </item>
    <item rdf:about="http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-timer&amp;rev=1475953525&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2016-10-08T19:05:25+00:00</dc:date>
        <dc:creator>Anonymous (anonymous@undisclosed.example.com)</dc:creator>
        <title>desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-timer</title>
        <link>http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-timer&amp;rev=1475953525&amp;do=diff</link>
        <description>Soporte Timers: Clase Timer

La clase Timer permitirá crear objetos que representan los módulos Timers del microcontrolador.

No se implementó la clase TimerChannel, por lo que las funcionalidades de Output Compare e Input Capture no son accesibles.</description>
    </item>
    <item rdf:about="http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-uart&amp;rev=1482093853&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2016-12-18T20:44:13+00:00</dc:date>
        <dc:creator>Anonymous (anonymous@undisclosed.example.com)</dc:creator>
        <title>desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-uart</title>
        <link>http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb-uart&amp;rev=1482093853&amp;do=diff</link>
        <description>Soporte UART y RS485: Clase UART

La clase UART permitirá crear objetos que representan los módulos UART y RS845 de la placa.

Constructor

La clase posee un constructor que recibe como argumento el número de UART que controlará. Los valores posibles son</description>
    </item>
    <item rdf:about="http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb&amp;rev=1476016572&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2016-10-09T12:36:12+00:00</dc:date>
        <dc:creator>Anonymous (anonymous@undisclosed.example.com)</dc:creator>
        <title>desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb</title>
        <link>http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-pyb&amp;rev=1476016572&amp;do=diff</link>
        <description>Módulo pyb

Este módulo posee las clases que representan los periféricos de hardware de la placa. Creando objetos de estas clases se podrán manejar dichos perifericos.

Clases Soportadas

	*  LED : Permite el uso de los Leds
	*  Switch : Permite el uso de los pulsadores</description>
    </item>
    <item rdf:about="http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-utime&amp;rev=1476016927&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2016-10-09T12:42:07+00:00</dc:date>
        <dc:creator>Anonymous (anonymous@undisclosed.example.com)</dc:creator>
        <title>desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-utime</title>
        <link>http://www.proyecto-ciaa.com.ar/devwiki/doku.php?id=desarrollo:edu-ciaa:edu-ciaa-nxp:python:bibliotecas:modulo-utime&amp;rev=1476016927&amp;do=diff</link>
        <description>Módulo utime

Este módulo permite el manejo de fecha y hora usando el módulo RTC

Ejemplo
import pyb
import utime

print(&quot;utime Test&quot;)

rtc = pyb.RTC()

while True:
    now = rtc.datetime()
    print(now)

    ts = utime.time()
    print(&quot;timestamp:&quot;+str(ts))
    dateTimeTuple = utime.localtime(ts)
    print(dateTimeTuple)
    ts = utime.mktime(dateTimeTuple)
    print(&quot;mktime timestamp:&quot;+str(ts))
    print(&quot;__________________________&quot;)

    utime.sleep(1)</description>
    </item>
</rdf:RDF>
